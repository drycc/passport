imageOrg: "drycc"
imagePullPolicy: "Always"
imageTag: "canary"
imageRegistry: "registry.drycc.cc"

## Enable diagnostic mode
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers
  ##
  args:
    - infinity

resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 50Mi
  # requests:
  #   cpu: 100m
  #   memory: 30Mi

nodeAffinityPreset:
  key: "drycc.cc/node"
  type: "soft"
  values:
  - "true"

podAffinityPreset:
  type: ""
  extraMatchLabels:
    security: "drycc-security"

podAntiAffinityPreset:
  type: "soft"
  extraMatchLabels:
    app: "drycc-passport"

# Set passport deployment replicas
replicas: 1
## valkeyUrl is will no longer use the built-in valkey component
valkeyUrl: ""
## databaseUrl and databaseReplicaUrl are will no longer use the built-in database component
databaseUrl: ""
databaseReplicaUrl: ""
# Any custom controller environment variables
# can be specified as key-value pairs under environment
# this is usually a non required setting.
environment:
## General settings
#  DRYCC_DEBUG: False
#  ADMIN_ENABLED: False
#  REGISTRATION_ENABLED: False
## LDAP setting
#  LDAP_ENDPOINT: ""
#  LDAP_BIND_DN: ""
#  LDAP_BIND_PASSWORD: ""
#  LDAP_USER_BASEDN: ""
#  LDAP_USER_FILTER: ""
#  LDAP_GROUP_BASEDN: ""
#  LDAP_GROUP_FILTER: ""
#  LDAP_ACTIVE_GROUP: ""
#  LDAP_STAFF_GROUP: ""
#  LDAP_SUPERUSER_GROUP:  ""
## OATUH2 setting
#  ACCESS_TOKEN_EXPIRE_SECONDS: 2592000
#  ID_TOKEN_EXPIRE_SECONDS: 2592000
#  AUTHORIZATION_CODE_EXPIRE_SECONDS: 600
#  CLIENT_SECRET_GENERATOR_LENGTH: 64
#  REFRESH_TOKEN_EXPIRE_SECONDS: 5184000
## EAMIL setting
#  EMAIL_HOST: ""
#  EMAIL_PORT: ""
#  DEFAULT_FROM_EMAIL: ""
#  EMAIL_HOST_USER: ""
#  EMAIL_HOST_PASSWORD: ""
#  EMAIL_USE_TLS: ""
#  EMAIL_USE_SSL: ""
# Used to create Django admin users
adminUsername: "admin"
adminPassword: "admin"
adminEmail: "admin@email.com"
# Reserved usernames
reservedUsernames: ""
# The following configurations to initialize oauth2 application
# Names are all lowercase letters
# The key and secret are generated automatically if they are empty
# If prefix is not empty, it represents internal application.
#
initApplications:
- name: "controller"
  key: ""
  secret: ""
  prefix: "drycc"
  grant_type: "password"
  redirect_uri: "/v2/complete/drycc/"
- name: "grafana"
  key: ""
  secret: ""
  prefix: "drycc-grafana"
  grant_type: "authorization-code"
  redirect_uri: "/oauth2/callback"

# Service
service:
  # Provide any additional service annotations
  annotations: {}

valkey:
  enabled: true

database:
  enabled: true

global:
  # Admin email, used for each component to send email to administrator
  email: "drycc@drycc.cc"
  # A domain name consists of one or more parts.
  # Periods (.) are used to separate these parts.
  # Each part must be 1 to 63 characters in length and can contain lowercase letters, digits, and hyphens (-).
  # It must start and end with a lowercase letter or digit.
  clusterDomain: "cluster.local"
  # The public resolvable hostname to build your cluster with.
  #
  # This will be the hostname that is used to build endpoints such as "drycc.$HOSTNAME"
  platformDomain: ""
  # Whether cert_passport is enabled to automatically generate passport certificates
  certManagerEnabled: true
