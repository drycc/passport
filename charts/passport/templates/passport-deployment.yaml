{{- if eq .Values.global.passport_location "on-cluster" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-passport
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.image_tag }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-passport
  template:
    metadata:
      labels:
        app: drycc-passport
    spec:
      serviceAccount: drycc-passport
      initContainers:
      - name: drycc-passport-init
        image: docker.io/drycc/python-dev:latest
        imagePullPolicy: {{.Values.image_pull_policy}}
        command:
          - netcat
          - -v
          - -u
          - $(DRYCC_DATABASE_URL)
        {{- include "passport.envs" . | indent 8 }}
      containers:
      - name: drycc-passport
        image: {{.Values.image_registry}}/{{.Values.image_org}}/passport:{{.Values.image_tag}}
        imagePullPolicy: {{.Values.image_pull_policy}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 5
        ports:
          - containerPort: 8000
            name: http
        {{- include "passport.limits" . | indent 8 }}
        {{- include "passport.envs" . | indent 8 }}
        {{- include "passport.volumeMounts" . | indent 8 }}
      {{- include "passport.volumes" . | indent 6 }}
{{- end }}
