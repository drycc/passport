apiVersion: batch/v1
kind: Job
metadata:
  name: drycc-passport-job-upgrade
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
    helm.sh/hook: post-install,post-upgrade,post-rollback
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      initContainers:
      - name: drycc-passport-init
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/python-dev:latest
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
          - netcat
          - -v
          - -u
          - $(DRYCC_DATABASE_URL),$(DRYCC_DATABASE_REPLICA_URL)
        {{- include "passport.envs" . | indent 8 }}
      containers:
      - name: drycc-passport-job-upgrade
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/passport:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 8 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 8 }}
        {{- else }}
        args:
        - /usr/bin/env
        - bash
        - -ec
        - |
          python -u /workspace/manage.py migrate --noinput
          if [ "${ADMIN_USERNAME}" ] && [ "${ADMIN_PASSWORD}" ] && [ "${ADMIN_EMAIL}" ]; then
            echo "Create administrator"
            python /workspace/manage.py createadminuser --username "${ADMIN_USERNAME}" --password "${ADMIN_PASSWORD}" --noinput --email "${ADMIN_EMAIL}"
          fi
          python /workspace/manage.py create_oauth2_application --path /etc/drycc/passport/init-applications.json
        {{- end }}
        {{- with index .Values "resources" }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- include "passport.envs" . | indent 8 }}
        {{- include "passport.volumeMounts" . | indent 8 }}
      {{- include "passport.volumes" . | indent 6 }}
      restartPolicy: Never
